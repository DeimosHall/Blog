<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Deimos Hall</title>
    
    
    
    <link>https://deimoshall.dev/es/blog/software/</link>
    <description>Recent content in Software on Deimos Hall</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Tue, 25 Jul 2023 09:07:29 -0600</lastBuildDate>
    
	<atom:link href="https://deimoshall.dev/es/blog/software/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Comprime Video Usando La Terminal</title>
      <link>https://deimoshall.dev/es/blog/software/linux/utilities/compress-video-ffmpeg/</link>
      <pubDate>Tue, 25 Jul 2023 21:59:06 -0600</pubDate>
      
      <guid>https://deimoshall.dev/es/blog/software/linux/utilities/compress-video-ffmpeg/</guid>
      <description>
        
          &lt;img src=&#34;https://lh3.googleusercontent.com/drive-viewer/AKGpihbv8cZi5uRW9p8DPN9hm9RwydR4IX61K4mGdz8EpEXQywabY2ii7Bk0156iITWuog3H_Cu7vnKqpAQVDIoWlmHN4IqIhl8i-Xw=s1600-rw-v1&#34;/&gt;
          
        
        
        
          FFmpeg is a command line tool that offers a lot of options to manipulate video and audio files. In this post I will show you how to compress a video file using it.
Normalmente usamos FFmpeg en la terminal, también hay interfaces gráficas que lo usan como backend. Por ejemplo, HandBrake es una interfaz gráfica que usa FFmpeg para comprimir archivos de video. Pero en este post usaremos FFmpeg directamente.
          
        
        </description>
    </item>
    
    <item>
      <title>Cómo usar el sensor de temperatura de la Raspberry Pi Pico (Arduino)</title>
      <link>https://deimoshall.dev/es/blog/software/iot/how-to-use-onboard-raspberry-pi-pico-temperature-sensor/</link>
      <pubDate>Sun, 16 Jul 2023 09:26:04 -0600</pubDate>
      
      <guid>https://deimoshall.dev/es/blog/software/iot/how-to-use-onboard-raspberry-pi-pico-temperature-sensor/</guid>
      <description>
        
          &lt;img src=&#34;https://lh3.googleusercontent.com/drive-viewer/AKGpihZuorMOZ4H6ZGJ9tHN7Sm9LmwmeB-uWVwuPEDPgZzofy4zfF0U40yq8GE8TYxLdEQbXwPk8prCkcac2zxkDfQooxcd9PYzHGrw=s1600-rw-v1&#34;/&gt;
          
        
        
        
          Hace unos días, intenté usar el sensor de temperatura de la Raspberry Pi Pico usando Arduino, pero solo encontré tutoriales para MicroPython. Afortunadamente, encontré un issue de Github donde alguien respondió cómo hacerlo. Así que decidí crear una biblioteca basada en ese código y quiero compartirla contigo. El issue está aquí.
Considera darle una estrella al repositorio si te resulta útil. Puedes encontrarlo aquí.
Instala la biblioteca # Puedes usar el Administrador de bibliotecas de Arduino o arduino-cli para instalarla.
          
        
        </description>
    </item>
    
    <item>
      <title>Copiar al portapapeles usando Jetpack Compose</title>
      <link>https://deimoshall.dev/es/blog/software/android/copy-to-clipboard/</link>
      <pubDate>Sat, 28 Jan 2023 08:56:07 -0600</pubDate>
      
      <guid>https://deimoshall.dev/es/blog/software/android/copy-to-clipboard/</guid>
      <description>
        
          &lt;img src=&#34;https://lh3.googleusercontent.com/drive-viewer/AKGpihaTJc5kRf3hzWSN4IdkYm58uwgihgBrlMDHho5tMnzckUroHyIqJ-I-AWIZMTYsesW_sNiJZkx2aKHdXRpL-sPPHIPnFiWwdQ=s1600-rw-v1&#34;/&gt;
          
        
        
        
          En este artículo aprenderemos a crear una función para copiar texto al portapapeles. La manera de manejar el contexto en la aplicación es ligeramente diferente.
La app que estoy usando para este ejemplo es un administrador de contraseñas donde necesito copiar al portapapeles desde el text field. Puedes encontrar el proyecto en mi Github en este link: https://github.com/DeimosHall/Glocker.git. Sin embargo, puedes seguir los pasos en tu propia app.
Como puedes ver en la imagen, estoy usando una función llamada copyToClipboard que recibe dos parámetros, el contexto y un texto.
          
        
        </description>
    </item>
    
    <item>
      <title>Cortar vídeo en una terminal de linux</title>
      <link>https://deimoshall.dev/es/blog/software/linux/utilities/cut-video-ffmpeg/</link>
      <pubDate>Sat, 24 Dec 2022 20:20:49 -0600</pubDate>
      
      <guid>https://deimoshall.dev/es/blog/software/linux/utilities/cut-video-ffmpeg/</guid>
      <description>
        
          &lt;img src=&#34;https://lh3.googleusercontent.com/drive-viewer/AKGpihZXpY1OovMl62GevxRdf0jX82KE7VCvanJSLfwn-VFKeK1gqBCKL8l4RwRhvdmNkTN-ZWCh5d0-VCBnIrlfHF-SalrNc_45q-E=s1600-rw-v1&#34;/&gt;
          
        
        
        
          Si quieres recortar un vídeo pero no quieres abrir un editor de vídeo, puedes usar una utilidad de terminal llamada &amp;ldquo;ffmpeg&amp;rdquo;.
En sistemas basados en Debian/Ubuntu podemos instalarlo con:
sudo apt install ffmpeg Ahora podemos usar el siguiente comando para cortar un vídeo:
ffmpeg -i input.mp4 -ss 01:29:23 -to 01:35:02 -c copy output.mp4 Explicación # Con &amp;ldquo;ffmpeg -i input.mp4&amp;rdquo; decimos que queremos usar el vídeo llamado &amp;ldquo;input.mp4&amp;rdquo;. Es importante usar la extensión de archivo mp4.
          
        
        </description>
    </item>
    
  </channel>
</rss>